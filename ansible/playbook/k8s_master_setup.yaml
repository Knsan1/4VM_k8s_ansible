---
- name: Kubernetes Master Setup
  hosts: master
  become: true
  vars:
    master_ip: "192.168.56.10"
    pod_cidr: "172.169.0.0/16"
    srv_cidr: "10.129.0.0/16"
    current_dir: "{{ playbook_dir }}"  # Directory where the playbook is run

  tasks:
    - name: Get the short hostname
      command: hostname -s
      register: nodename
      changed_when: false

    - name: Pull the Kubernetes images
      command: kubeadm config images pull

    - name: Initialize the Kubernetes master
      command: >
        kubeadm init
        --apiserver-advertise-address={{ master_ip }}
        --apiserver-cert-extra-sans={{ master_ip }}
        --pod-network-cidr={{ pod_cidr }}
        --service-cidr={{ srv_cidr }}
        --node-name {{ nodename.stdout }}
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Create .kube directory for the user
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Create .kube directory for vagrant user
      file:
        path: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant

    - name: Copy admin.conf to vagrant's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        remote_src: yes
        owner: vagrant
        group: vagrant
        mode: '0644'

    - name: Ensure .kube/config exists before checking taints
      stat:
        path: /home/{{ ansible_user }}/.kube/config
      register: kubeconfig

    - name: Check for control-plane taint
      command: kubectl get nodes -o jsonpath='{.items[*].spec.taints[*].key}'
      register: taints_output
      # ignore_errors: yes
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

    - name: Taint nodes to allow scheduling if not already tainted
      command: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
      when: "'node-role.kubernetes.io/control-plane' in taints_output.stdout"
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

    - name: Create configs directory
      file:
        path: /home/{{ ansible_user }}/configs
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Generate kubeadm join command
      shell: kubeadm token create --print-join-command
      register: join_command

    - name: Write join command to join.sh
      copy:
        content: "{{ join_command.stdout }}"
        dest: /home/{{ ansible_user }}/configs/join.sh
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Ensure local directory exists on control machine
      local_action:
        module: file
        path: "{{ current_dir }}"
        state: directory
        mode: '0755'

    - name: Fetch admin.conf to local machine
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ current_dir }}/admin.conf"
        flat: yes

    - name: Fetch join.sh to local machine
      fetch:
        src: /home/{{ ansible_user }}/configs/join.sh
        dest: "{{ current_dir }}/join.sh"
        flat: yes
