---
- name: Setup Kubernetes
  hosts: all
  become: true
  vars:
    k8s_version: "1.29"  # Define the Kubernetes version here

  tasks:
    - name: Ensure /etc/kubernetes directory exists
      file:
        path: /etc/kubernetes
        state: directory

    - name: Ensure /etc/apt/keyrings directory exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Update apt package list
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present

    - name: Add the Kubernetes GPG key
      apt_key:
        url: "https://pkgs.k8s.io/core:/stable:/v{{ k8s_version }}/deb/Release.key"
        state: present
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Configure the Kubernetes apt repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ k8s_version }}/deb/ /"
        state: present
        filename: kubernetes

    - name: Update apt package list after adding Kubernetes repo
      apt:
        update_cache: yes

    - name: Install kubelet, kubeadm, and kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        force_apt_get: yes

    - name: Hold kubelet, kubeadm, kubectl packages
      command: apt-mark hold kubelet kubeadm kubectl

    - name: Enable and start kubelet service
      systemd:
        name: kubelet
        enabled: yes
        state: started

    - name: Disable swap in fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^\s*(.+\s+swap\s+.+)$'
        line: '#\1'
        state: present
      notify:
        - Disable swap

    - name: Disable swap immediately
      command: swapoff -a

    - name: Ensure swap is disabled on reboot
      cron:
        name: Disable swap on reboot
        special_time: reboot
        job: 'swapoff -a'

    - name: Load overlay module
      modprobe:
        name: overlay
        state: present

    - name: Load br_netfilter module
      modprobe:
        name: br_netfilter
        state: present

    - name: Persist overlay and br_netfilter modules
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: Set sysctl params for Kubernetes
      copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
      notify:
        - Apply sysctl params

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Update apt package list after adding Docker repo
      apt:
        update_cache: yes

    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Create /etc/containerd directory
      file:
        path: /etc/containerd
        state: directory

    - name: Generate default containerd configuration
      command: "containerd config default"
      register: containerd_config
      changed_when: false

    - name: Write containerd configuration
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout }}"
      notify:
        - Enable systemd cgroup in containerd

    - name: Set crictl runtime-endpoint
      command: crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock --set image-endpoint=unix:///run/containerd/containerd.sock

  handlers:
    - name: Disable swap
      command: swapoff -a

    - name: Apply sysctl params
      command: sysctl --system

    - name: Enable systemd cgroup in containerd
      replace:
        path: /etc/containerd/config.toml
        regexp: '^(\s*SystemdCgroup\s*=\s*)false'
        replace: '\1true'
      notify:
        - Restart containerd
    
    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Enable and start kubelet
      systemd:
        name: kubelet
        state: restarted
        enabled: yes

